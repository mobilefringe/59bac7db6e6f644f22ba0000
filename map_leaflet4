<style type="text/css">
    html { height: 100% }
    body { height: 100%; margin: 0; padding: 0 }
     #map-container {
        width:900px;
        height:500px;
        margin: auto;
    }
    #map-canvas{
        height:100%;
        width:100%;
    }
    svg:not(:root) {
        overflow: visible;
    }
</style>
<div id="map-container">
   <div id="map-canvas"></div> 
</div>
   
<link href='https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.5/leaflet.css' rel='stylesheet' type='text/css'/>
<script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.5/leaflet-src.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.4.9/d3.min.js"></script>
<script src="../l.d3svgoverlay.js"></script>
<script>
    var stores = getStoresList();
    var map = L.map("map-canvas", 
        {crs: L.CRS.Simple,
        center: [0, 0],
        zoom: 3,
        maxZoom:6,
        minZoom:1,
        zoomDelta: 0.25,
        zoomAnimation: true,
        // zoomSnap: 0,
        touchZoom:true,
        bounceAtZoomLimits: true
        // _animatingZoom:true
    });
    // var countries = [];
    var countriesOverlay = L.d3SvgOverlay(function(sel, proj) {
    });
    var d3layer_this;
    var  svgUrl = "//mallmaverick.cdn.speedyrails.net/system/properties/svgmaps/000/000/028/original/Londonderry_DB_4.svg?1497642416"
    
    d3.xml(svgUrl).mimeType("image/svg+xml").get(function(error, svgImg) {
        if (error) throw error;
        map.getPanes().overlayPane.appendChild(svgImg.documentElement);
        d3layer_this =  countriesOverlay.addTo(map);
        console.log(d3layer_this);
    });
    
    map.on('click', onMapClick);
    var smallIcon = new L.Icon({
        iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-icon.png',
        iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-icon-2x.png',
        iconSize:    [25, 41],
        iconAnchor:  [12, 41],
        popupAnchor: [1, -34],
        shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',
        shadowSize:  [0,0]
    });
    var yx = L.latLng;
    var xy = function(x, y) {
        if (L.Util.isArray(x)) {    // When doing xy([x, y]);
            return yx(x[1], x[0]);
        }
        return yx(y, x);  // When doing xy(x, y);
    };
    $(document).ready(function(e){
        init(e);
        loadMallDataCached(renderPage);
    })
    function renderPage(){
        // var stores = getStoresList();
        // var store_svgregion = stores[0].svgmap_region;
        // console.log($("#"+store_svgregion));
        
        
        $('.custom_backdrop').remove();
        $('.yield').fadeIn();
    }
    $(window).load(function(){
        setTimeout(function(){
            console.log("delay is done!");
            map.setZoom(1,{animate:true});
            var stores = getStoresList();
            var store_svgregion = stores[0].svgmap_region;
            console.log($("#"+store_svgregion)[0].getBBox());
            var coords = $("#"+store_svgregion)[0].getBBox();
            var height = parseInt(coords["height"]);
            var width = parseInt(coords["width"]);
            var store    = xy(coords["x"],coords["y"]);
            
       L.marker(store,{icon:smallIcon}).addTo(map).bindPopup('Store');
        var stores_arr = [xy(100,-100),xy(200,-200)];
       console.log("hundson bay",$("#Stores_x5F_1_x5F_21_1_")[0].getBBox()); 
        //  [x*this._scale, y*this._scale]
        console.log("countriesOverlay",countriesOverlay);
        // console.log("scaleMarker_coords",countriesOverlay.scaleMarker_coords(coords["x"]));
        // L.marker(store2,{icon:smallIcon}).addTo(map).bindPopup('Store2'+store2);
        $.each(stores_arr, function (key,val){
            L.marker(val,{icon:smallIcon}).addTo(map).bindPopup('Store2'+val);
        });
        // polygon.bindPopup("I am a polygon.");
        
        var store_svgregion = stores[0].svgmap_region;
        // console.log($("#"+store_svgregion));
        $.each(stores,function(key,val){
            $("#"+val.svgmap_region).attr("class","select_map_region");
        });
        
        
        
        }, 500);
        
       
    });
   function onMapClick(e) {
        // console.log(e.originalEvent.toElement.id);
        if(e.originalEvent.toElement.nodeName == "rect"  || e.originalEvent.toElement.nodeName == "polygon"){
            my_store = stores.filter(function( index ) {
                return index.svgmap_region ==  e.originalEvent.toElement.id ;
            })[0];
            $("#"+).attr("class","map_region_selected");
            // console.log(my_store);
            if(my_store != undefined) {
                var popup = L.popup().setLatLng(e.latlng)
                .setContent(my_store.name)
                .openOn(map);
            }
        }
    }
    //marker dev
    // get_coords: function (v) {
    //     var coords = _data.R.getById(v).getBBox();
    //     return coords;
    // }
</script>